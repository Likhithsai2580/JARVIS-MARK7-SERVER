{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Likhith Sai\\\\OneDrive\\\\Desktop\\\\JARVIS-MARK7-SERVER\\\\android_bridge_server\\\\frontend\\\\src\\\\components\\\\DeviceConnection.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Card, CardContent, Typography, CircularProgress, Alert, Grid, List, ListItem, ListItemIcon, ListItemText, Chip } from '@mui/material';\nimport { QrCode, Code, CloudUpload, CloudDownload, Circle as StatusIcon } from '@mui/icons-material';\nimport { QRCodeSVG } from 'qrcode.react';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000';\nconst endpoints = [{\n  name: 'Generate Connection Code',\n  path: '/api/generate-connection-code',\n  method: 'GET',\n  description: 'Generate a QR code for device connection',\n  icon: /*#__PURE__*/_jsxDEV(QrCode, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 11\n  }, this)\n}, {\n  name: 'Send Command',\n  path: '/api/send-command',\n  method: 'POST',\n  description: 'Send commands to connected device',\n  icon: /*#__PURE__*/_jsxDEV(Code, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 11\n  }, this)\n}, {\n  name: 'Upload File',\n  path: '/api/upload',\n  method: 'POST',\n  description: 'Upload files to the server',\n  icon: /*#__PURE__*/_jsxDEV(CloudUpload, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 11\n  }, this)\n}, {\n  name: 'Download File',\n  path: '/api/download/:filename',\n  method: 'GET',\n  description: 'Download files from the server',\n  icon: /*#__PURE__*/_jsxDEV(CloudDownload, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 11\n  }, this)\n}];\nconst DeviceConnection = () => {\n  _s();\n  const [qrCode, setQrCode] = useState('');\n  const [socket, setSocket] = useState(null);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const [error, setError] = useState('');\n  const [apiStatus, setApiStatus] = useState('offline');\n  useEffect(() => {\n    // Check API Status\n    const checkApiStatus = async () => {\n      try {\n        await axios.get(`${API_URL}/api/generate-connection-code`);\n        setApiStatus('online');\n      } catch (err) {\n        setApiStatus('offline');\n        console.error('API Status Check Failed:', err);\n      }\n    };\n\n    // Generate QR code\n    const generateQR = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/api/generate-connection-code`);\n        setQrCode(response.data.qrCode);\n\n        // Initialize socket connection\n        const newSocket = io(API_URL);\n        setSocket(newSocket);\n        newSocket.on('connect', () => {\n          setConnectionStatus('connecting');\n        });\n        newSocket.on('authenticated', data => {\n          if (data.success) {\n            setConnectionStatus('connected');\n          }\n        });\n        newSocket.on('disconnect', () => {\n          setConnectionStatus('disconnected');\n        });\n        return () => {\n          newSocket.close();\n        };\n      } catch (err) {\n        setError('Failed to generate connection code');\n        console.error(err);\n      }\n    };\n    checkApiStatus();\n    generateQR();\n\n    // Poll API status every 30 seconds\n    const statusInterval = setInterval(checkApiStatus, 30000);\n    return () => clearInterval(statusInterval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(StatusIcon, {\n                sx: {\n                  color: apiStatus === 'online' ? 'success.main' : 'error.main'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: [\"API Status: \", apiStatus.toUpperCase()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${API_URL}`,\n                variant: \"outlined\",\n                size: \"small\",\n                sx: {\n                  ml: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Device Connection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"error\",\n              sx: {\n                mb: 2\n              },\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                gap: 2\n              },\n              children: [qrCode ? /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  bgcolor: 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(QRCodeSVG, {\n                  value: qrCode,\n                  size: 200\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: connectionStatus === 'connected' ? 'success.main' : connectionStatus === 'connecting' ? 'warning.main' : 'error.main',\n                children: [\"Status: \", connectionStatus.charAt(0).toUpperCase() + connectionStatus.slice(1)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Available Endpoints\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              children: endpoints.map(endpoint => /*#__PURE__*/_jsxDEV(ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  children: endpoint.icon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: endpoint.name,\n                  secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      component: \"span\",\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      children: [endpoint.method, \" \", endpoint.path]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      component: \"span\",\n                      variant: \"body2\",\n                      children: endpoint.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: endpoint.method,\n                  color: endpoint.method === 'GET' ? 'success' : 'primary',\n                  size: \"small\",\n                  sx: {\n                    ml: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 21\n                }, this)]\n              }, endpoint.path, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(DeviceConnection, \"G88Si478GY+OoZBwUmrrCtVTdRk=\");\n_c = DeviceConnection;\nexport default DeviceConnection;\nvar _c;\n$RefreshReg$(_c, \"DeviceConnection\");","map":{"version":3,"names":["React","useState","useEffect","Box","Card","CardContent","Typography","CircularProgress","Alert","Grid","List","ListItem","ListItemIcon","ListItemText","Chip","QrCode","Code","CloudUpload","CloudDownload","Circle","StatusIcon","QRCodeSVG","axios","io","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","endpoints","name","path","method","description","icon","fileName","_jsxFileName","lineNumber","columnNumber","DeviceConnection","_s","qrCode","setQrCode","socket","setSocket","connectionStatus","setConnectionStatus","error","setError","apiStatus","setApiStatus","checkApiStatus","get","err","console","generateQR","response","data","newSocket","on","success","close","statusInterval","setInterval","clearInterval","sx","p","children","container","spacing","item","xs","display","alignItems","gap","color","variant","toUpperCase","label","size","ml","md","gutterBottom","severity","mb","flexDirection","bgcolor","value","charAt","slice","map","endpoint","primary","secondary","component","_c","$RefreshReg$"],"sources":["C:/Users/Likhith Sai/OneDrive/Desktop/JARVIS-MARK7-SERVER/android_bridge_server/frontend/src/components/DeviceConnection.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  CircularProgress,\r\n  Alert,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Chip,\r\n} from '@mui/material';\r\nimport {\r\n  QrCode,\r\n  Code,\r\n  CloudUpload,\r\n  CloudDownload,\r\n  Circle as StatusIcon,\r\n} from '@mui/icons-material';\r\nimport { QRCodeSVG } from 'qrcode.react';\r\nimport axios from 'axios';\r\nimport { io, Socket } from 'socket.io-client';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000';\r\n\r\ninterface Endpoint {\r\n  name: string;\r\n  path: string;\r\n  method: string;\r\n  description: string;\r\n  icon: React.ReactNode;\r\n}\r\n\r\nconst endpoints: Endpoint[] = [\r\n  {\r\n    name: 'Generate Connection Code',\r\n    path: '/api/generate-connection-code',\r\n    method: 'GET',\r\n    description: 'Generate a QR code for device connection',\r\n    icon: <QrCode />,\r\n  },\r\n  {\r\n    name: 'Send Command',\r\n    path: '/api/send-command',\r\n    method: 'POST',\r\n    description: 'Send commands to connected device',\r\n    icon: <Code />,\r\n  },\r\n  {\r\n    name: 'Upload File',\r\n    path: '/api/upload',\r\n    method: 'POST',\r\n    description: 'Upload files to the server',\r\n    icon: <CloudUpload />,\r\n  },\r\n  {\r\n    name: 'Download File',\r\n    path: '/api/download/:filename',\r\n    method: 'GET',\r\n    description: 'Download files from the server',\r\n    icon: <CloudDownload />,\r\n  },\r\n];\r\n\r\nconst DeviceConnection: React.FC = () => {\r\n  const [qrCode, setQrCode] = useState<string>('');\r\n  const [socket, setSocket] = useState<Socket | null>(null);\r\n  const [connectionStatus, setConnectionStatus] = useState<'disconnected' | 'connecting' | 'connected'>('disconnected');\r\n  const [error, setError] = useState<string>('');\r\n  const [apiStatus, setApiStatus] = useState<'online' | 'offline'>('offline');\r\n\r\n  useEffect(() => {\r\n    // Check API Status\r\n    const checkApiStatus = async () => {\r\n      try {\r\n        await axios.get(`${API_URL}/api/generate-connection-code`);\r\n        setApiStatus('online');\r\n      } catch (err) {\r\n        setApiStatus('offline');\r\n        console.error('API Status Check Failed:', err);\r\n      }\r\n    };\r\n\r\n    // Generate QR code\r\n    const generateQR = async () => {\r\n      try {\r\n        const response = await axios.get(`${API_URL}/api/generate-connection-code`);\r\n        setQrCode(response.data.qrCode);\r\n        \r\n        // Initialize socket connection\r\n        const newSocket = io(API_URL);\r\n        setSocket(newSocket);\r\n\r\n        newSocket.on('connect', () => {\r\n          setConnectionStatus('connecting');\r\n        });\r\n\r\n        newSocket.on('authenticated', (data) => {\r\n          if (data.success) {\r\n            setConnectionStatus('connected');\r\n          }\r\n        });\r\n\r\n        newSocket.on('disconnect', () => {\r\n          setConnectionStatus('disconnected');\r\n        });\r\n\r\n        return () => {\r\n          newSocket.close();\r\n        };\r\n      } catch (err) {\r\n        setError('Failed to generate connection code');\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    checkApiStatus();\r\n    generateQR();\r\n\r\n    // Poll API status every 30 seconds\r\n    const statusInterval = setInterval(checkApiStatus, 30000);\r\n    return () => clearInterval(statusInterval);\r\n  }, []);\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Grid container spacing={3}>\r\n        {/* API Status Section */}\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n                <StatusIcon\r\n                  sx={{\r\n                    color: apiStatus === 'online' ? 'success.main' : 'error.main',\r\n                  }}\r\n                />\r\n                <Typography variant=\"h6\">\r\n                  API Status: {apiStatus.toUpperCase()}\r\n                </Typography>\r\n                <Chip\r\n                  label={`${API_URL}`}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  sx={{ ml: 2 }}\r\n                />\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* QR Code Section */}\r\n        <Grid item xs={12} md={6}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Device Connection\r\n              </Typography>\r\n              {error && (\r\n                <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n                  {error}\r\n                </Alert>\r\n              )}\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  alignItems: 'center',\r\n                  gap: 2,\r\n                }}\r\n              >\r\n                {qrCode ? (\r\n                  <Box sx={{ p: 2, bgcolor: 'white' }}>\r\n                    <QRCodeSVG value={qrCode} size={200} />\r\n                  </Box>\r\n                ) : (\r\n                  <CircularProgress />\r\n                )}\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  color={\r\n                    connectionStatus === 'connected'\r\n                      ? 'success.main'\r\n                      : connectionStatus === 'connecting'\r\n                      ? 'warning.main'\r\n                      : 'error.main'\r\n                  }\r\n                >\r\n                  Status: {connectionStatus.charAt(0).toUpperCase() + connectionStatus.slice(1)}\r\n                </Typography>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Available Endpoints Section */}\r\n        <Grid item xs={12} md={6}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Available Endpoints\r\n              </Typography>\r\n              <List>\r\n                {endpoints.map((endpoint) => (\r\n                  <ListItem key={endpoint.path}>\r\n                    <ListItemIcon>{endpoint.icon}</ListItemIcon>\r\n                    <ListItemText\r\n                      primary={endpoint.name}\r\n                      secondary={\r\n                        <>\r\n                          <Typography component=\"span\" variant=\"body2\" color=\"text.secondary\">\r\n                            {endpoint.method} {endpoint.path}\r\n                          </Typography>\r\n                          <br />\r\n                          <Typography component=\"span\" variant=\"body2\">\r\n                            {endpoint.description}\r\n                          </Typography>\r\n                        </>\r\n                      }\r\n                    />\r\n                    <Chip\r\n                      label={endpoint.method}\r\n                      color={endpoint.method === 'GET' ? 'success' : 'primary'}\r\n                      size=\"small\"\r\n                      sx={{ ml: 1 }}\r\n                    />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DeviceConnection; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,GAAG,EACHC,IAAI,EACJC,WAAW,EACXC,UAAU,EACVC,gBAAgB,EAChBC,KAAK,EACLC,IAAI,EACJC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,YAAY,EACZC,IAAI,QACC,eAAe;AACtB,SACEC,MAAM,EACNC,IAAI,EACJC,WAAW,EACXC,aAAa,EACbC,MAAM,IAAIC,UAAU,QACf,qBAAqB;AAC5B,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,EAAE,QAAgB,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAUxE,MAAMC,SAAqB,GAAG,CAC5B;EACEC,IAAI,EAAE,0BAA0B;EAChCC,IAAI,EAAE,+BAA+B;EACrCC,MAAM,EAAE,KAAK;EACbC,WAAW,EAAE,0CAA0C;EACvDC,IAAI,eAAEZ,OAAA,CAACV,MAAM;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AACjB,CAAC,EACD;EACER,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,mBAAmB;EACzBC,MAAM,EAAE,MAAM;EACdC,WAAW,EAAE,mCAAmC;EAChDC,IAAI,eAAEZ,OAAA,CAACT,IAAI;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AACf,CAAC,EACD;EACER,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,aAAa;EACnBC,MAAM,EAAE,MAAM;EACdC,WAAW,EAAE,4BAA4B;EACzCC,IAAI,eAAEZ,OAAA,CAACR,WAAW;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AACtB,CAAC,EACD;EACER,IAAI,EAAE,eAAe;EACrBC,IAAI,EAAE,yBAAyB;EAC/BC,MAAM,EAAE,KAAK;EACbC,WAAW,EAAE,gCAAgC;EAC7CC,IAAI,eAAEZ,OAAA,CAACP,aAAa;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AACxB,CAAC,CACF;AAED,MAAMC,gBAA0B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAG5C,QAAQ,CAAS,EAAE,CAAC;EAChD,MAAM,CAAC6C,MAAM,EAAEC,SAAS,CAAC,GAAG9C,QAAQ,CAAgB,IAAI,CAAC;EACzD,MAAM,CAAC+C,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhD,QAAQ,CAA8C,cAAc,CAAC;EACrH,MAAM,CAACiD,KAAK,EAAEC,QAAQ,CAAC,GAAGlD,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACmD,SAAS,EAAEC,YAAY,CAAC,GAAGpD,QAAQ,CAAuB,SAAS,CAAC;EAE3EC,SAAS,CAAC,MAAM;IACd;IACA,MAAMoD,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMhC,KAAK,CAACiC,GAAG,CAAC,GAAG3B,OAAO,+BAA+B,CAAC;QAC1DyB,YAAY,CAAC,QAAQ,CAAC;MACxB,CAAC,CAAC,OAAOG,GAAG,EAAE;QACZH,YAAY,CAAC,SAAS,CAAC;QACvBI,OAAO,CAACP,KAAK,CAAC,0BAA0B,EAAEM,GAAG,CAAC;MAChD;IACF,CAAC;;IAED;IACA,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMrC,KAAK,CAACiC,GAAG,CAAC,GAAG3B,OAAO,+BAA+B,CAAC;QAC3EiB,SAAS,CAACc,QAAQ,CAACC,IAAI,CAAChB,MAAM,CAAC;;QAE/B;QACA,MAAMiB,SAAS,GAAGtC,EAAE,CAACK,OAAO,CAAC;QAC7BmB,SAAS,CAACc,SAAS,CAAC;QAEpBA,SAAS,CAACC,EAAE,CAAC,SAAS,EAAE,MAAM;UAC5Bb,mBAAmB,CAAC,YAAY,CAAC;QACnC,CAAC,CAAC;QAEFY,SAAS,CAACC,EAAE,CAAC,eAAe,EAAGF,IAAI,IAAK;UACtC,IAAIA,IAAI,CAACG,OAAO,EAAE;YAChBd,mBAAmB,CAAC,WAAW,CAAC;UAClC;QACF,CAAC,CAAC;QAEFY,SAAS,CAACC,EAAE,CAAC,YAAY,EAAE,MAAM;UAC/Bb,mBAAmB,CAAC,cAAc,CAAC;QACrC,CAAC,CAAC;QAEF,OAAO,MAAM;UACXY,SAAS,CAACG,KAAK,CAAC,CAAC;QACnB,CAAC;MACH,CAAC,CAAC,OAAOR,GAAG,EAAE;QACZL,QAAQ,CAAC,oCAAoC,CAAC;QAC9CM,OAAO,CAACP,KAAK,CAACM,GAAG,CAAC;MACpB;IACF,CAAC;IAEDF,cAAc,CAAC,CAAC;IAChBI,UAAU,CAAC,CAAC;;IAEZ;IACA,MAAMO,cAAc,GAAGC,WAAW,CAACZ,cAAc,EAAE,KAAK,CAAC;IACzD,OAAO,MAAMa,aAAa,CAACF,cAAc,CAAC;EAC5C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACExC,OAAA,CAACtB,GAAG;IAACiE,EAAE,EAAE;MAAEC,CAAC,EAAE;IAAE,CAAE;IAAAC,QAAA,eAChB7C,OAAA,CAAChB,IAAI;MAAC8D,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAF,QAAA,gBAEzB7C,OAAA,CAAChB,IAAI;QAACgE,IAAI;QAACC,EAAE,EAAE,EAAG;QAAAJ,QAAA,eAChB7C,OAAA,CAACrB,IAAI;UAAAkE,QAAA,eACH7C,OAAA,CAACpB,WAAW;YAAAiE,QAAA,eACV7C,OAAA,CAACtB,GAAG;cAACiE,EAAE,EAAE;gBAAEO,OAAO,EAAE,MAAM;gBAAEC,UAAU,EAAE,QAAQ;gBAAEC,GAAG,EAAE;cAAE,CAAE;cAAAP,QAAA,gBACzD7C,OAAA,CAACL,UAAU;gBACTgD,EAAE,EAAE;kBACFU,KAAK,EAAE1B,SAAS,KAAK,QAAQ,GAAG,cAAc,GAAG;gBACnD;cAAE;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eACFhB,OAAA,CAACnB,UAAU;gBAACyE,OAAO,EAAC,IAAI;gBAAAT,QAAA,GAAC,cACX,EAAClB,SAAS,CAAC4B,WAAW,CAAC,CAAC;cAAA;gBAAA1C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1B,CAAC,eACbhB,OAAA,CAACX,IAAI;gBACHmE,KAAK,EAAE,GAAGrD,OAAO,EAAG;gBACpBmD,OAAO,EAAC,UAAU;gBAClBG,IAAI,EAAC,OAAO;gBACZd,EAAE,EAAE;kBAAEe,EAAE,EAAE;gBAAE;cAAE;gBAAA7C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACf,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGPhB,OAAA,CAAChB,IAAI;QAACgE,IAAI;QAACC,EAAE,EAAE,EAAG;QAACU,EAAE,EAAE,CAAE;QAAAd,QAAA,eACvB7C,OAAA,CAACrB,IAAI;UAAAkE,QAAA,eACH7C,OAAA,CAACpB,WAAW;YAAAiE,QAAA,gBACV7C,OAAA,CAACnB,UAAU;cAACyE,OAAO,EAAC,IAAI;cAACM,YAAY;cAAAf,QAAA,EAAC;YAEtC;cAAAhC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,EACZS,KAAK,iBACJzB,OAAA,CAACjB,KAAK;cAAC8E,QAAQ,EAAC,OAAO;cAAClB,EAAE,EAAE;gBAAEmB,EAAE,EAAE;cAAE,CAAE;cAAAjB,QAAA,EACnCpB;YAAK;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CACR,eACDhB,OAAA,CAACtB,GAAG;cACFiE,EAAE,EAAE;gBACFO,OAAO,EAAE,MAAM;gBACfa,aAAa,EAAE,QAAQ;gBACvBZ,UAAU,EAAE,QAAQ;gBACpBC,GAAG,EAAE;cACP,CAAE;cAAAP,QAAA,GAED1B,MAAM,gBACLnB,OAAA,CAACtB,GAAG;gBAACiE,EAAE,EAAE;kBAAEC,CAAC,EAAE,CAAC;kBAAEoB,OAAO,EAAE;gBAAQ,CAAE;gBAAAnB,QAAA,eAClC7C,OAAA,CAACJ,SAAS;kBAACqE,KAAK,EAAE9C,MAAO;kBAACsC,IAAI,EAAE;gBAAI;kBAAA5C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpC,CAAC,gBAENhB,OAAA,CAAClB,gBAAgB;gBAAA+B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CACpB,eACDhB,OAAA,CAACnB,UAAU;gBACTyE,OAAO,EAAC,OAAO;gBACfD,KAAK,EACH9B,gBAAgB,KAAK,WAAW,GAC5B,cAAc,GACdA,gBAAgB,KAAK,YAAY,GACjC,cAAc,GACd,YACL;gBAAAsB,QAAA,GACF,UACS,EAACtB,gBAAgB,CAAC2C,MAAM,CAAC,CAAC,CAAC,CAACX,WAAW,CAAC,CAAC,GAAGhC,gBAAgB,CAAC4C,KAAK,CAAC,CAAC,CAAC;cAAA;gBAAAtD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGPhB,OAAA,CAAChB,IAAI;QAACgE,IAAI;QAACC,EAAE,EAAE,EAAG;QAACU,EAAE,EAAE,CAAE;QAAAd,QAAA,eACvB7C,OAAA,CAACrB,IAAI;UAAAkE,QAAA,eACH7C,OAAA,CAACpB,WAAW;YAAAiE,QAAA,gBACV7C,OAAA,CAACnB,UAAU;cAACyE,OAAO,EAAC,IAAI;cAACM,YAAY;cAAAf,QAAA,EAAC;YAEtC;cAAAhC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACbhB,OAAA,CAACf,IAAI;cAAA4D,QAAA,EACFtC,SAAS,CAAC6D,GAAG,CAAEC,QAAQ,iBACtBrE,OAAA,CAACd,QAAQ;gBAAA2D,QAAA,gBACP7C,OAAA,CAACb,YAAY;kBAAA0D,QAAA,EAAEwB,QAAQ,CAACzD;gBAAI;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAe,CAAC,eAC5ChB,OAAA,CAACZ,YAAY;kBACXkF,OAAO,EAAED,QAAQ,CAAC7D,IAAK;kBACvB+D,SAAS,eACPvE,OAAA,CAAAE,SAAA;oBAAA2C,QAAA,gBACE7C,OAAA,CAACnB,UAAU;sBAAC2F,SAAS,EAAC,MAAM;sBAAClB,OAAO,EAAC,OAAO;sBAACD,KAAK,EAAC,gBAAgB;sBAAAR,QAAA,GAChEwB,QAAQ,CAAC3D,MAAM,EAAC,GAAC,EAAC2D,QAAQ,CAAC5D,IAAI;oBAAA;sBAAAI,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACtB,CAAC,eACbhB,OAAA;sBAAAa,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACNhB,OAAA,CAACnB,UAAU;sBAAC2F,SAAS,EAAC,MAAM;sBAAClB,OAAO,EAAC,OAAO;sBAAAT,QAAA,EACzCwB,QAAQ,CAAC1D;oBAAW;sBAAAE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACX,CAAC;kBAAA,eACb;gBACH;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF,CAAC,eACFhB,OAAA,CAACX,IAAI;kBACHmE,KAAK,EAAEa,QAAQ,CAAC3D,MAAO;kBACvB2C,KAAK,EAAEgB,QAAQ,CAAC3D,MAAM,KAAK,KAAK,GAAG,SAAS,GAAG,SAAU;kBACzD+C,IAAI,EAAC,OAAO;kBACZd,EAAE,EAAE;oBAAEe,EAAE,EAAE;kBAAE;gBAAE;kBAAA7C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACf,CAAC;cAAA,GArBWqD,QAAQ,CAAC5D,IAAI;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAsBlB,CACX;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACE,EAAA,CA3KID,gBAA0B;AAAAwD,EAAA,GAA1BxD,gBAA0B;AA6KhC,eAAeA,gBAAgB;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}