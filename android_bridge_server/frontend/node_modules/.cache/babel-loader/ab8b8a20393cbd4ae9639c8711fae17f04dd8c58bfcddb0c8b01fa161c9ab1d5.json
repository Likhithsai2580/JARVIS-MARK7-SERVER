{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Likhith Sai\\\\OneDrive\\\\Desktop\\\\JARVIS-MARK7-SERVER\\\\android_bridge_server\\\\frontend\\\\src\\\\components\\\\DeviceConnection.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Card, CardContent, Typography, CircularProgress, Alert } from '@mui/material';\nimport { QRCodeSVG } from 'qrcode.react';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000';\nconst DeviceConnection = () => {\n  _s();\n  const [qrCode, setQrCode] = useState('');\n  const [socket, setSocket] = useState(null);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    // Generate QR code\n    const generateQR = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/api/generate-connection-code`);\n        setQrCode(response.data.qrCode);\n\n        // Initialize socket connection\n        const newSocket = io(API_URL);\n        setSocket(newSocket);\n        newSocket.on('connect', () => {\n          setConnectionStatus('connecting');\n        });\n        newSocket.on('authenticated', data => {\n          if (data.success) {\n            setConnectionStatus('connected');\n          }\n        });\n        newSocket.on('disconnect', () => {\n          setConnectionStatus('disconnected');\n        });\n        return () => {\n          newSocket.close();\n        };\n      } catch (err) {\n        setError('Failed to generate connection code');\n        console.error(err);\n      }\n    };\n    generateQR();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      gap: 3,\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Connect Your Device\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        width: '100%',\n        maxWidth: 400\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 400,\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"text.secondary\",\n          gutterBottom: true,\n          children: \"Scan this QR code with your Android device\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), qrCode ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 2,\n            bgcolor: 'white'\n          },\n          children: /*#__PURE__*/_jsxDEV(QRCodeSVG, {\n            value: qrCode,\n            size: 200\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: connectionStatus === 'connected' ? 'success.main' : connectionStatus === 'connecting' ? 'warning.main' : 'error.main',\n          children: [\"Status: \", connectionStatus.charAt(0).toUpperCase() + connectionStatus.slice(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"text.secondary\",\n      align: \"center\",\n      children: \"Make sure your Android device has the companion app installed and is on the same network.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(DeviceConnection, \"UeeILwfYPY+pOsAXoR4PK2Sut4w=\");\n_c = DeviceConnection;\nexport default DeviceConnection;\nvar _c;\n$RefreshReg$(_c, \"DeviceConnection\");","map":{"version":3,"names":["React","useState","useEffect","Box","Card","CardContent","Typography","CircularProgress","Alert","QRCodeSVG","axios","io","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","DeviceConnection","_s","qrCode","setQrCode","socket","setSocket","connectionStatus","setConnectionStatus","error","setError","generateQR","response","get","data","newSocket","on","success","close","err","console","sx","display","flexDirection","alignItems","gap","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","severity","width","maxWidth","color","bgcolor","value","size","charAt","toUpperCase","slice","align","_c","$RefreshReg$"],"sources":["C:/Users/Likhith Sai/OneDrive/Desktop/JARVIS-MARK7-SERVER/android_bridge_server/frontend/src/components/DeviceConnection.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  CircularProgress,\r\n  Alert,\r\n} from '@mui/material';\r\nimport { QRCodeSVG } from 'qrcode.react';\r\nimport axios from 'axios';\r\nimport { io, Socket } from 'socket.io-client';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000';\r\n\r\nconst DeviceConnection: React.FC = () => {\r\n  const [qrCode, setQrCode] = useState<string>('');\r\n  const [socket, setSocket] = useState<Socket | null>(null);\r\n  const [connectionStatus, setConnectionStatus] = useState<'disconnected' | 'connecting' | 'connected'>('disconnected');\r\n  const [error, setError] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    // Generate QR code\r\n    const generateQR = async () => {\r\n      try {\r\n        const response = await axios.get(`${API_URL}/api/generate-connection-code`);\r\n        setQrCode(response.data.qrCode);\r\n        \r\n        // Initialize socket connection\r\n        const newSocket = io(API_URL);\r\n        setSocket(newSocket);\r\n\r\n        newSocket.on('connect', () => {\r\n          setConnectionStatus('connecting');\r\n        });\r\n\r\n        newSocket.on('authenticated', (data) => {\r\n          if (data.success) {\r\n            setConnectionStatus('connected');\r\n          }\r\n        });\r\n\r\n        newSocket.on('disconnect', () => {\r\n          setConnectionStatus('disconnected');\r\n        });\r\n\r\n        return () => {\r\n          newSocket.close();\r\n        };\r\n      } catch (err) {\r\n        setError('Failed to generate connection code');\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    generateQR();\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        gap: 3,\r\n        p: 3,\r\n      }}\r\n    >\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Connect Your Device\r\n      </Typography>\r\n\r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ width: '100%', maxWidth: 400 }}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      <Card sx={{ maxWidth: 400, width: '100%' }}>\r\n        <CardContent\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            gap: 2,\r\n          }}\r\n        >\r\n          <Typography variant=\"body1\" color=\"text.secondary\" gutterBottom>\r\n            Scan this QR code with your Android device\r\n          </Typography>\r\n\r\n          {qrCode ? (\r\n            <Box sx={{ p: 2, bgcolor: 'white' }}>\r\n              <QRCodeSVG value={qrCode} size={200} />\r\n            </Box>\r\n          ) : (\r\n            <CircularProgress />\r\n          )}\r\n\r\n          <Typography\r\n            variant=\"h6\"\r\n            color={\r\n              connectionStatus === 'connected'\r\n                ? 'success.main'\r\n                : connectionStatus === 'connecting'\r\n                ? 'warning.main'\r\n                : 'error.main'\r\n            }\r\n          >\r\n            Status: {connectionStatus.charAt(0).toUpperCase() + connectionStatus.slice(1)}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\r\n        Make sure your Android device has the companion app installed and is on the same network.\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DeviceConnection; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}